{"version":3,"file":"Login.test.js","sourceRoot":"","sources":["Login.test.tsx"],"names":[],"mappings":";;;;AAOA,AAAI,KAAC,AAAM,AAAC,AAAc,AAAC,AAAC,uBAN5B,AAAO,AAAK,AAAM,AAAO,AAAC,uEAC1B,AAAO,AAAC,AAAS,AAAC,AAAM,AAAc,AAAC,yCACvC,AAAO,AAAE,AAAO,AAAE,AAAM,AAAQ,AAAC,8BAEjC,AAAO,AAAK,AAAM,AAAU,AAAC;AAI7B;AACE,GAAM,AAAK,OAAG,AAGb,AAAC;AAEF,GAAM,AAAa,eAAG,AAAO,oBAAC,AAAC,AAAK,AAAC,8CAAI,AAAK,AAAC,AAAG,AAAE,AAAC;AAErD,AAAM,MAAC;AACL,AAAK;AACL,AAAa,AACd,AAAC,AACJ;;AAAC;AAED,AAAQ,SAAC,AAAY,aAAE,AAAG,AAAE;AAO1B,AAAQ,SAAC,AAAO,QAAE,AAAG,AAAE;AACrB,AAAE,GAAC,AAAsC,uCAAE,AAAG,AAAE;AACpB,AAAK,AAAE,AAAC,OAAlC,AAAM,CAAE,AAAa,AAAE;AACvB,AAAM,OAAC,AAAa,AAAC,eAAC,AAAe,AAAE,AAAC;AAGxC,GAAM,AAAU,YAAG,AAAa,cAAC,AAAI,AAAC,AAAS,AAAC,6BAAC,AAAE,GAAC,AAAC,AAAC,GAAC,AAAK,AAAE,AAAC;AAC/D,AAAM,OAAC,AAAU,WAAC,AAAW,AAAC,aAAC,AAAI,KAAC,AAAU,AAAC,AAAC,AAClD;AAAC,AAAC,AAAC,AACL;AAAC,AAAC,AAAC,AACL;AAAC,AAAC,AAAC","sourcesContent":["/// <reference types=\"jest\"/>\nimport React from 'react';\nimport {TextInput} from 'react-native';\nimport { shallow } from 'enzyme';\n\nimport Login from '../Login';\n\njest.unmock('react-native');\n\nfunction setup() {\n  const props = {\n// Här kan ni mocka komponentens props om sådana finns\n// typ userName: 'test'\n  };\n\n  const enzymeWrapper = shallow(<Login {...props} /> );\n\n  return {\n    props,\n    enzymeWrapper,\n  };\n}\n\ndescribe('components', () => {\n  /**\n   * Test component rendering. Properties of children might be tested by importing their type:\n   *   import { Text } from 'react-native';\n   *    const busyProps = enzymeWrapper.find(Text).props();\n   *    expect(busyProps.text).toBe('test);\n   */\n  describe('Login', () => {\n    it('should render self and subcomponents', () => {\n      const { enzymeWrapper } = setup();\n      expect(enzymeWrapper).toMatchSnapshot();\n\n      // Test Login\n      const textInput2 = enzymeWrapper.find(TextInput).at(1).props();\n      expect(textInput2.placeholder).toBe('Password');\n    });\n  });\n});"]}