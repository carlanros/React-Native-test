{"version":3,"sources":["_hasPath.js"],"names":["castPath","require","isArguments","isArray","isIndex","isLength","toKey","hasPath","object","path","hasFunc","index","length","result","key","module","exports"],"mappings":"AAAA,GAAIA,UAAWC,QAAQ,aAAR,CAAf,CACIC,YAAcD,QAAQ,eAAR,CADlB,CAEIE,QAAUF,QAAQ,WAAR,CAFd,CAGIG,QAAUH,QAAQ,YAAR,CAHd,CAIII,SAAWJ,QAAQ,YAAR,CAJf,CAKIK,MAAQL,QAAQ,UAAR,CALZ,CAgBA,QAASM,QAAT,CAAiBC,MAAjB,CAAyBC,IAAzB,CAA+BC,OAA/B,CAAwC,CACtCD,KAAOT,SAASS,IAAT,CAAeD,MAAf,CAAP,CAEA,GAAIG,OAAQ,CAAC,CAAb,CACIC,OAASH,KAAKG,MADlB,CAEIC,OAAS,KAFb,CAIA,MAAO,EAAEF,KAAF,CAAUC,MAAjB,CAAyB,CACvB,GAAIE,KAAMR,MAAMG,KAAKE,KAAL,CAAN,CAAV,CACA,GAAI,EAAEE,OAASL,QAAU,IAAV,EAAkBE,QAAQF,MAAR,CAAgBM,GAAhB,CAA7B,CAAJ,CAAwD,CACtD,MACD,CACDN,OAASA,OAAOM,GAAP,CAAT,CACD,CACD,GAAID,QAAU,EAAEF,KAAF,EAAWC,MAAzB,CAAiC,CAC/B,MAAOC,OAAP,CACD,CACDD,OAASJ,QAAU,IAAV,CAAiB,CAAjB,CAAqBA,OAAOI,MAArC,CACA,MAAO,CAAC,CAACA,MAAF,EAAYP,SAASO,MAAT,CAAZ,EAAgCR,QAAQU,GAAR,CAAaF,MAAb,CAAhC,GACJT,QAAQK,MAAR,GAAmBN,YAAYM,MAAZ,CADf,CAAP,CAED,CAEDO,OAAOC,OAAP,CAAiBT,OAAjB","file":"_hasPath.js","sourcesContent":["var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n"]}