{"version":3,"sources":["toFinite.js"],"names":["toNumber","require","INFINITY","MAX_INTEGER","toFinite","value","sign","module","exports"],"mappings":"AAAA,GAAIA,UAAWC,QAAQ,YAAR,CAAf,CAGA,GAAIC,UAAW,EAAI,CAAnB,CACIC,YAAc,uBADlB,CA0BA,QAASC,SAAT,CAAkBC,KAAlB,CAAyB,CACvB,GAAI,CAACA,KAAL,CAAY,CACV,MAAOA,SAAU,CAAV,CAAcA,KAAd,CAAsB,CAA7B,CACD,CACDA,MAAQL,SAASK,KAAT,CAAR,CACA,GAAIA,QAAUH,QAAV,EAAsBG,QAAU,CAACH,QAArC,CAA+C,CAC7C,GAAII,MAAQD,MAAQ,CAAR,CAAY,CAAC,CAAb,CAAiB,CAA7B,CACA,MAAOC,MAAOH,WAAd,CACD,CACD,MAAOE,SAAUA,KAAV,CAAkBA,KAAlB,CAA0B,CAAjC,CACD,CAEDE,OAAOC,OAAP,CAAiBJ,QAAjB","file":"toFinite.js","sourcesContent":["var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n"]}