{"version":3,"sources":["_baseMatchesProperty.js"],"names":["baseIsEqual","require","get","hasIn","isKey","isStrictComparable","matchesStrictComparable","toKey","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseMatchesProperty","path","srcValue","object","objValue","undefined","module","exports"],"mappings":"AAAA,GAAIA,aAAcC,QAAQ,gBAAR,CAAlB,CACIC,IAAMD,QAAQ,OAAR,CADV,CAEIE,MAAQF,QAAQ,SAAR,CAFZ,CAGIG,MAAQH,QAAQ,UAAR,CAHZ,CAIII,mBAAqBJ,QAAQ,uBAAR,CAJzB,CAKIK,wBAA0BL,QAAQ,4BAAR,CAL9B,CAMIM,MAAQN,QAAQ,UAAR,CANZ,CASA,GAAIO,sBAAuB,CAA3B,CACIC,uBAAyB,CAD7B,CAWA,QAASC,oBAAT,CAA6BC,IAA7B,CAAmCC,QAAnC,CAA6C,CAC3C,GAAIR,MAAMO,IAAN,GAAeN,mBAAmBO,QAAnB,CAAnB,CAAiD,CAC/C,MAAON,yBAAwBC,MAAMI,IAAN,CAAxB,CAAqCC,QAArC,CAAP,CACD,CACD,MAAO,UAASC,MAAT,CAAiB,CACtB,GAAIC,UAAWZ,IAAIW,MAAJ,CAAYF,IAAZ,CAAf,CACA,MAAQG,YAAaC,SAAb,EAA0BD,WAAaF,QAAxC,CACHT,MAAMU,MAAN,CAAcF,IAAd,CADG,CAEHX,YAAYY,QAAZ,CAAsBE,QAAtB,CAAgCN,qBAAuBC,sBAAvD,CAFJ,CAGD,CALD,CAMD,CAEDO,OAAOC,OAAP,CAAiBP,mBAAjB","file":"_baseMatchesProperty.js","sourcesContent":["var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n"]}