{"version":3,"sources":["Systrace.js"],"names":["invariant","require","TRACE_TAG_REACT_APPS","TRACE_TAG_JS_VM_CALLS","_enabled","_asyncCookie","_markStack","_markStackIndex","_canInstallReactHook","_useFiber","REACT_MARKER","userTimingPolyfill","__DEV__","mark","markName","systraceLabel","indexOfId","lastIndexOf","cutoffIndex","length","slice","Systrace","beginEvent","measure","measureName","startMark","endMark","topMark","endEvent","clearMarks","clearMeasures","reactDebugToolHook","onBeforeMountComponent","debugID","ReactComponentTreeHook","displayName","getDisplayName","onMountComponent","onBeforeUpdateComponent","onUpdateComponent","onBeforeUnmountComponent","onUnmountComponent","onBeginLifeCycleTimer","timerType","onEndLifeCycleTimer","installReactHook","useFiber","global","performance","addHook","setEnabled","enabled","nativeTraceBeginLegacy","nativeTraceEndLegacy","undefined","ReactDebugTool","removeHook","isEnabled","profileName","args","nativeTraceBeginSection","nativeTraceEndSection","beginAsyncEvent","cookie","nativeTraceBeginAsyncSection","endAsyncEvent","nativeTraceEndAsyncSection","counterEvent","value","nativeTraceCounter","attachToRelayProfiler","relayProfiler","attachProfileHandler","name","attachAggregateHandler","callback","swizzleJSON","measureMethods","JSON","object","objectName","methodNames","forEach","methodName","objName","fnName","func","apply","arguments","ret","module","exports"],"mappings":"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","file":"Systrace.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Systrace\n * @flow\n */\n'use strict';\n\nconst invariant = require('fbjs/lib/invariant');\n\ntype RelayProfiler = {\n  attachProfileHandler(\n    name: string,\n    handler: (name: string, state?: any) => () => void\n  ): void,\n\n  attachAggregateHandler(\n    name: string,\n    handler: (name: string, callback: () => void) => void\n  ): void,\n};\n\n/* eslint no-bitwise: 0 */\nconst TRACE_TAG_REACT_APPS = 1 << 17;\nconst TRACE_TAG_JS_VM_CALLS = 1 << 27;\n\nlet _enabled = false;\nlet _asyncCookie = 0;\nconst _markStack = [];\nlet _markStackIndex = -1;\nlet _canInstallReactHook = false;\nlet _useFiber = false;\n\n// Implements a subset of User Timing API necessary for React measurements.\n// https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API\nconst REACT_MARKER = '\\u269B';\nconst userTimingPolyfill = __DEV__ ? {\n  mark(markName: string) {\n    if (_enabled) {\n      _markStackIndex++;\n      _markStack[_markStackIndex] = markName;\n      let systraceLabel = markName;\n      // Since perf measurements are a shared namespace in User Timing API,\n      // we prefix all React results with a React emoji.\n      if (markName[0] === REACT_MARKER) {\n        // This is coming from React.\n        // Removing component IDs keeps trace colors stable.\n        const indexOfId = markName.lastIndexOf(' (#');\n        const cutoffIndex = indexOfId !== -1 ? indexOfId : markName.length;\n        // Also cut off the emoji because it breaks Systrace\n        systraceLabel = markName.slice(2, cutoffIndex);\n      }\n      Systrace.beginEvent(systraceLabel);\n    }\n  },\n  measure(measureName: string, startMark: ?string, endMark: ?string) {\n    if (_enabled) {\n      invariant(\n        typeof measureName === 'string' &&\n        typeof startMark === 'string' &&\n        typeof endMark === 'undefined',\n        'Only performance.measure(string, string) overload is supported.'\n      );\n      const topMark = _markStack[_markStackIndex];\n      invariant(\n        startMark === topMark,\n        'There was a mismatching performance.measure() call. ' +\n        'Expected \"%s\" but got \"%s.\"',\n        topMark,\n        startMark,\n      );\n      _markStackIndex--;\n      // We can't use more descriptive measureName because Systrace doesn't\n      // let us edit labels post factum.\n      Systrace.endEvent();\n    }\n  },\n  clearMarks(markName: string) {\n    if (_enabled) {\n      if (_markStackIndex === -1) {\n        return;\n      }\n      if (markName === _markStack[_markStackIndex]) {\n        // React uses this for \"cancelling\" started measurements.\n        // Systrace doesn't support deleting measurements, so we just stop them.\n        if (userTimingPolyfill != null) {\n          userTimingPolyfill.measure(markName, markName);\n        }\n      }\n    }\n  },\n  clearMeasures() {\n    // React calls this to avoid memory leaks in browsers, but we don't keep\n    // measurements anyway.\n  },\n} : null;\n\n// A hook to get React Stack markers in Systrace.\nconst reactDebugToolHook = __DEV__ ? {\n  onBeforeMountComponent(debugID) {\n    const ReactComponentTreeHook = require('ReactGlobalSharedState').ReactComponentTreeHook;\n    const displayName = ReactComponentTreeHook.getDisplayName(debugID);\n    Systrace.beginEvent(`ReactReconciler.mountComponent(${displayName})`);\n  },\n  onMountComponent(debugID) {\n    Systrace.endEvent();\n  },\n  onBeforeUpdateComponent(debugID) {\n    const ReactComponentTreeHook = require('ReactGlobalSharedState').ReactComponentTreeHook;\n    const displayName = ReactComponentTreeHook.getDisplayName(debugID);\n    Systrace.beginEvent(`ReactReconciler.updateComponent(${displayName})`);\n  },\n  onUpdateComponent(debugID) {\n    Systrace.endEvent();\n  },\n  onBeforeUnmountComponent(debugID) {\n    const ReactComponentTreeHook = require('ReactGlobalSharedState').ReactComponentTreeHook;\n    const displayName = ReactComponentTreeHook.getDisplayName(debugID);\n    Systrace.beginEvent(`ReactReconciler.unmountComponent(${displayName})`);\n  },\n  onUnmountComponent(debugID) {\n    Systrace.endEvent();\n  },\n  onBeginLifeCycleTimer(debugID, timerType) {\n    const ReactComponentTreeHook = require('ReactGlobalSharedState').ReactComponentTreeHook;\n    const displayName = ReactComponentTreeHook.getDisplayName(debugID);\n    Systrace.beginEvent(`${displayName}.${timerType}()`);\n  },\n  onEndLifeCycleTimer(debugID, timerType) {\n    Systrace.endEvent();\n  },\n} : null;\n\nconst Systrace = {\n  installReactHook(useFiber: boolean) {\n    if (_enabled) {\n      if (__DEV__) {\n        if (useFiber) {\n          global.performance = userTimingPolyfill;\n        } else {\n          require('ReactDebugTool').addHook(reactDebugToolHook);\n        }\n      }\n    }\n    _useFiber = useFiber;\n    _canInstallReactHook = true;\n  },\n\n  setEnabled(enabled: boolean) {\n    if (_enabled !== enabled) {\n      if (__DEV__) {\n        if (enabled) {\n          global.nativeTraceBeginLegacy && global.nativeTraceBeginLegacy(TRACE_TAG_JS_VM_CALLS);\n        } else {\n          global.nativeTraceEndLegacy && global.nativeTraceEndLegacy(TRACE_TAG_JS_VM_CALLS);\n        }\n        if (_canInstallReactHook) {\n          if (_useFiber) {\n            if (enabled && global.performance === undefined) {\n              global.performance = userTimingPolyfill;\n            }\n          } else {\n            const ReactDebugTool = require('ReactDebugTool');\n            if (enabled) {\n              ReactDebugTool.addHook(reactDebugToolHook);\n            } else {\n              ReactDebugTool.removeHook(reactDebugToolHook);\n            }\n          }\n        }\n      }\n      _enabled = enabled;\n    }\n  },\n\n  isEnabled(): boolean {\n    return _enabled;\n  },\n\n  /**\n   * beginEvent/endEvent for starting and then ending a profile within the same call stack frame\n  **/\n  beginEvent(profileName?: any, args?: any) {\n    if (_enabled) {\n      profileName = typeof profileName === 'function' ?\n        profileName() : profileName;\n      global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS, profileName, args);\n    }\n  },\n\n  endEvent() {\n    if (_enabled) {\n      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);\n    }\n  },\n\n  /**\n   * beginAsyncEvent/endAsyncEvent for starting and then ending a profile where the end can either\n   * occur on another thread or out of the current stack frame, eg await\n   * the returned cookie variable should be used as input into the endAsyncEvent call to end the profile\n  **/\n  beginAsyncEvent(profileName?: any): any {\n    const cookie = _asyncCookie;\n    if (_enabled) {\n      _asyncCookie++;\n      profileName = typeof profileName === 'function' ?\n        profileName() : profileName;\n      global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie);\n    }\n    return cookie;\n  },\n\n  endAsyncEvent(profileName?: any, cookie?: any) {\n    if (_enabled) {\n      profileName = typeof profileName === 'function' ?\n        profileName() : profileName;\n      global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS, profileName, cookie);\n    }\n  },\n\n  /**\n   * counterEvent registers the value to the profileName on the systrace timeline\n  **/\n  counterEvent(profileName?: any, value?: any) {\n    if (_enabled) {\n      profileName = typeof profileName === 'function' ?\n        profileName() : profileName;\n      global.nativeTraceCounter &&\n        global.nativeTraceCounter(TRACE_TAG_REACT_APPS, profileName, value);\n    }\n  },\n\n  /**\n   * Relay profiles use await calls, so likely occur out of current stack frame\n   * therefore async variant of profiling is used\n  **/\n  attachToRelayProfiler(relayProfiler: RelayProfiler) {\n    relayProfiler.attachProfileHandler('*', (name) => {\n      const cookie = Systrace.beginAsyncEvent(name);\n      return () => {\n        Systrace.endAsyncEvent(name, cookie);\n      };\n    });\n\n    relayProfiler.attachAggregateHandler('*', (name, callback) => {\n      Systrace.beginEvent(name);\n      callback();\n      Systrace.endEvent();\n    });\n  },\n\n  /* This is not called by default due to perf overhead but it's useful\n     if you want to find traces which spend too much time in JSON. */\n  swizzleJSON() {\n    Systrace.measureMethods(JSON, 'JSON', [\n      'parse',\n      'stringify'\n    ]);\n  },\n\n /**\n  * Measures multiple methods of a class. For example, you can do:\n  * Systrace.measureMethods(JSON, 'JSON', ['parse', 'stringify']);\n  *\n  * @param object\n  * @param objectName\n  * @param methodNames Map from method names to method display names.\n  */\n measureMethods(object: any, objectName: string, methodNames: Array<string>): void {\n   if (!__DEV__) {\n     return;\n   }\n\n   methodNames.forEach(methodName => {\n     object[methodName] = Systrace.measure(\n       objectName,\n       methodName,\n       object[methodName]\n     );\n   });\n },\n\n /**\n  * Returns an profiled version of the input function. For example, you can:\n  * JSON.parse = Systrace.measure('JSON', 'parse', JSON.parse);\n  *\n  * @param objName\n  * @param fnName\n  * @param {function} func\n  * @return {function} replacement function\n  */\n measure(objName: string, fnName: string, func: any): any {\n   if (!__DEV__) {\n     return func;\n   }\n\n   const profileName = `${objName}.${fnName}`;\n   return function() {\n     if (!_enabled) {\n       return func.apply(this, arguments);\n     }\n\n     Systrace.beginEvent(profileName);\n     const ret = func.apply(this, arguments);\n     Systrace.endEvent();\n     return ret;\n   };\n },\n};\n\nif (__DEV__) {\n  // This is needed, because require callis in polyfills are not processed as\n  // other files. Therefore, calls to `require('moduleId')` are not replaced\n  // with numeric IDs\n  // TODO(davidaurelio) Scan polyfills for dependencies, too (t9759686)\n  (require: any).Systrace = Systrace;\n}\n\nmodule.exports = Systrace;\n"]}