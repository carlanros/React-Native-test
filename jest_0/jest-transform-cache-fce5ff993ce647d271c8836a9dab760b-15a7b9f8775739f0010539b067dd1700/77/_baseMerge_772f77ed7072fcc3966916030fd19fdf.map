{"version":3,"sources":["_baseMerge.js"],"names":["Stack","require","assignMergeValue","baseFor","baseMergeDeep","isObject","keysIn","safeGet","baseMerge","object","source","srcIndex","customizer","stack","srcValue","key","newValue","undefined","module","exports"],"mappings":"AAAA,GAAIA,OAAQC,QAAQ,UAAR,CAAZ,CACIC,iBAAmBD,QAAQ,qBAAR,CADvB,CAEIE,QAAUF,QAAQ,YAAR,CAFd,CAGIG,cAAgBH,QAAQ,kBAAR,CAHpB,CAIII,SAAWJ,QAAQ,YAAR,CAJf,CAKIK,OAASL,QAAQ,UAAR,CALb,CAMIM,QAAUN,QAAQ,YAAR,CANd,CAmBA,QAASO,UAAT,CAAmBC,MAAnB,CAA2BC,MAA3B,CAAmCC,QAAnC,CAA6CC,UAA7C,CAAyDC,KAAzD,CAAgE,CAC9D,GAAIJ,SAAWC,MAAf,CAAuB,CACrB,OACD,CACDP,QAAQO,MAAR,CAAgB,SAASI,QAAT,CAAmBC,GAAnB,CAAwB,CACtC,GAAIV,SAASS,QAAT,CAAJ,CAAwB,CACtBD,QAAUA,MAAQ,GAAIb,MAAJ,EAAlB,EACAI,cAAcK,MAAd,CAAsBC,MAAtB,CAA8BK,GAA9B,CAAmCJ,QAAnC,CAA6CH,SAA7C,CAAwDI,UAAxD,CAAoEC,KAApE,EACD,CAHD,IAIK,CACH,GAAIG,UAAWJ,WACXA,WAAWL,QAAQE,MAAR,CAAgBM,GAAhB,CAAX,CAAiCD,QAAjC,CAA4CC,IAAM,EAAlD,CAAuDN,MAAvD,CAA+DC,MAA/D,CAAuEG,KAAvE,CADW,CAEXI,SAFJ,CAIA,GAAID,WAAaC,SAAjB,CAA4B,CAC1BD,SAAWF,QAAX,CACD,CACDZ,iBAAiBO,MAAjB,CAAyBM,GAAzB,CAA8BC,QAA9B,EACD,CACF,CAfD,CAeGV,MAfH,EAgBD,CAEDY,OAAOC,OAAP,CAAiBX,SAAjB","file":"_baseMerge.js","sourcesContent":["var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack);\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n"]}