{"version":3,"sources":["_createBind.js"],"names":["createCtor","require","root","WRAP_BIND_FLAG","createBind","func","bitmask","thisArg","isBind","Ctor","wrapper","fn","apply","arguments","module","exports"],"mappings":"AAAA,GAAIA,YAAaC,QAAQ,eAAR,CAAjB,CACIC,KAAOD,QAAQ,SAAR,CADX,CAIA,GAAIE,gBAAiB,CAArB,CAYA,QAASC,WAAT,CAAoBC,IAApB,CAA0BC,OAA1B,CAAmCC,OAAnC,CAA4C,CAC1C,GAAIC,QAASF,QAAUH,cAAvB,CACIM,KAAOT,WAAWK,IAAX,CADX,CAGA,QAASK,QAAT,EAAmB,CACjB,GAAIC,IAAM,MAAQ,OAAST,IAAjB,EAAyB,eAAgBQ,QAA1C,CAAqDD,IAArD,CAA4DJ,IAArE,CACA,MAAOM,IAAGC,KAAH,CAASJ,OAASD,OAAT,CAAmB,IAA5B,CAAkCM,SAAlC,CAAP,CACD,CACD,MAAOH,QAAP,CACD,CAEDI,OAAOC,OAAP,CAAiBX,UAAjB","file":"_createBind.js","sourcesContent":["var createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the optional `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createBind(func, bitmask, thisArg) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, arguments);\n  }\n  return wrapper;\n}\n\nmodule.exports = createBind;\n"]}