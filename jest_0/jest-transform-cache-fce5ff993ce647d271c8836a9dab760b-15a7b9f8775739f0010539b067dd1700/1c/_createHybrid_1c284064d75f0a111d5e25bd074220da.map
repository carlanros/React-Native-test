{"version":3,"sources":["_createHybrid.js"],"names":["composeArgs","require","composeArgsRight","countHolders","createCtor","createRecurry","getHolder","reorder","replaceHolders","root","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_FLIP_FLAG","createHybrid","func","bitmask","thisArg","partials","holders","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isCurried","isFlip","Ctor","undefined","wrapper","length","arguments","args","Array","index","placeholder","holdersCount","newHolders","thisBinding","fn","reverse","apply","module","exports"],"mappings":"AAAA,GAAIA,aAAcC,QAAQ,gBAAR,CAAlB,CACIC,iBAAmBD,QAAQ,qBAAR,CADvB,CAEIE,aAAeF,QAAQ,iBAAR,CAFnB,CAGIG,WAAaH,QAAQ,eAAR,CAHjB,CAIII,cAAgBJ,QAAQ,kBAAR,CAJpB,CAKIK,UAAYL,QAAQ,cAAR,CALhB,CAMIM,QAAUN,QAAQ,YAAR,CANd,CAOIO,eAAiBP,QAAQ,mBAAR,CAPrB,CAQIQ,KAAOR,QAAQ,SAAR,CARX,CAWA,GAAIS,gBAAiB,CAArB,CACIC,mBAAqB,CADzB,CAEIC,gBAAkB,CAFtB,CAGIC,sBAAwB,EAH5B,CAIIC,cAAgB,GAJpB,CAKIC,eAAiB,GALrB,CA0BA,QAASC,aAAT,CAAsBC,IAAtB,CAA4BC,OAA5B,CAAqCC,OAArC,CAA8CC,QAA9C,CAAwDC,OAAxD,CAAiEC,aAAjE,CAAgFC,YAAhF,CAA8FC,MAA9F,CAAsGC,GAAtG,CAA2GC,KAA3G,CAAkH,CAChH,GAAIC,OAAQT,QAAUJ,aAAtB,CACIc,OAASV,QAAUR,cADvB,CAEImB,UAAYX,QAAUP,kBAF1B,CAGImB,UAAYZ,SAAWN,gBAAkBC,qBAA7B,CAHhB,CAIIkB,OAASb,QAAUH,cAJvB,CAKIiB,KAAOH,UAAYI,SAAZ,CAAwB7B,WAAWa,IAAX,CALnC,CAOA,QAASiB,QAAT,EAAmB,CACjB,GAAIC,QAASC,UAAUD,MAAvB,CACIE,KAAOC,MAAMH,MAAN,CADX,CAEII,MAAQJ,MAFZ,CAIA,MAAOI,OAAP,CAAgB,CACdF,KAAKE,KAAL,EAAcH,UAAUG,KAAV,CAAd,CACD,CACD,GAAIT,SAAJ,CAAe,CACb,GAAIU,aAAclC,UAAU4B,OAAV,CAAlB,CACIO,aAAetC,aAAakC,IAAb,CAAmBG,WAAnB,CADnB,CAED,CACD,GAAIpB,QAAJ,CAAc,CACZiB,KAAOrC,YAAYqC,IAAZ,CAAkBjB,QAAlB,CAA4BC,OAA5B,CAAqCS,SAArC,CAAP,CACD,CACD,GAAIR,aAAJ,CAAmB,CACjBe,KAAOnC,iBAAiBmC,IAAjB,CAAuBf,aAAvB,CAAsCC,YAAtC,CAAoDO,SAApD,CAAP,CACD,CACDK,QAAUM,YAAV,CACA,GAAIX,WAAaK,OAAST,KAA1B,CAAiC,CAC/B,GAAIgB,YAAalC,eAAe6B,IAAf,CAAqBG,WAArB,CAAjB,CACA,MAAOnC,eACLY,IADK,CACCC,OADD,CACUF,YADV,CACwBkB,QAAQM,WADhC,CAC6CrB,OAD7C,CAELkB,IAFK,CAECK,UAFD,CAEalB,MAFb,CAEqBC,GAFrB,CAE0BC,MAAQS,MAFlC,CAAP,CAID,CACD,GAAIQ,aAAcf,OAAST,OAAT,CAAmB,IAArC,CACIyB,GAAKf,UAAYc,YAAY1B,IAAZ,CAAZ,CAAgCA,IADzC,CAGAkB,OAASE,KAAKF,MAAd,CACA,GAAIX,MAAJ,CAAY,CACVa,KAAO9B,QAAQ8B,IAAR,CAAcb,MAAd,CAAP,CACD,CAFD,IAEO,IAAIO,QAAUI,OAAS,CAAvB,CAA0B,CAC/BE,KAAKQ,OAAL,GACD,CACD,GAAIlB,OAASF,IAAMU,MAAnB,CAA2B,CACzBE,KAAKF,MAAL,CAAcV,GAAd,CACD,CACD,GAAI,MAAQ,OAAShB,IAAjB,EAAyB,eAAgByB,QAA7C,CAAsD,CACpDU,GAAKZ,MAAQ5B,WAAWwC,EAAX,CAAb,CACD,CACD,MAAOA,IAAGE,KAAH,CAASH,WAAT,CAAsBN,IAAtB,CAAP,CACD,CACD,MAAOH,QAAP,CACD,CAEDa,OAAOC,OAAP,CAAiBhC,YAAjB","file":"_createHybrid.js","sourcesContent":["var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    countHolders = require('./_countHolders'),\n    createCtor = require('./_createCtor'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    reorder = require('./_reorder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybrid;\n"]}