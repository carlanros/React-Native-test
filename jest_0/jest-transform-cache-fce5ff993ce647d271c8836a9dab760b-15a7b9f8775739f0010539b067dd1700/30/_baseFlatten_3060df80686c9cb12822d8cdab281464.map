{"version":3,"sources":["_baseFlatten.js"],"names":["arrayPush","require","isFlattenable","baseFlatten","array","depth","predicate","isStrict","result","index","length","value","module","exports"],"mappings":"AAAA,GAAIA,WAAYC,QAAQ,cAAR,CAAhB,CACIC,cAAgBD,QAAQ,kBAAR,CADpB,CAcA,QAASE,YAAT,CAAqBC,KAArB,CAA4BC,KAA5B,CAAmCC,SAAnC,CAA8CC,QAA9C,CAAwDC,MAAxD,CAAgE,CAC9D,GAAIC,OAAQ,CAAC,CAAb,CACIC,OAASN,MAAMM,MADnB,CAGAJ,YAAcA,UAAYJ,aAA1B,EACAM,SAAWA,OAAS,EAApB,EAEA,MAAO,EAAEC,KAAF,CAAUC,MAAjB,CAAyB,CACvB,GAAIC,OAAQP,MAAMK,KAAN,CAAZ,CACA,GAAIJ,MAAQ,CAAR,EAAaC,UAAUK,KAAV,CAAjB,CAAmC,CACjC,GAAIN,MAAQ,CAAZ,CAAe,CAEbF,YAAYQ,KAAZ,CAAmBN,MAAQ,CAA3B,CAA8BC,SAA9B,CAAyCC,QAAzC,CAAmDC,MAAnD,EACD,CAHD,IAGO,CACLR,UAAUQ,MAAV,CAAkBG,KAAlB,EACD,CACF,CAPD,IAOO,IAAI,CAACJ,QAAL,CAAe,CACpBC,OAAOA,OAAOE,MAAd,EAAwBC,KAAxB,CACD,CACF,CACD,MAAOH,OAAP,CACD,CAEDI,OAAOC,OAAP,CAAiBV,WAAjB","file":"_baseFlatten.js","sourcesContent":["var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n"]}