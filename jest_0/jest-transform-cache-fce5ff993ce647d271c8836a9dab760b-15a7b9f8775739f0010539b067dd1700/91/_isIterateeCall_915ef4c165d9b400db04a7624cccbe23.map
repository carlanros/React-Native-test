{"version":3,"sources":["_isIterateeCall.js"],"names":["eq","require","isArrayLike","isIndex","isObject","isIterateeCall","value","index","object","type","length","module","exports"],"mappings":"AAAA,GAAIA,IAAKC,QAAQ,MAAR,CAAT,CACIC,YAAcD,QAAQ,eAAR,CADlB,CAEIE,QAAUF,QAAQ,YAAR,CAFd,CAGIG,SAAWH,QAAQ,YAAR,CAHf,CAeA,QAASI,eAAT,CAAwBC,KAAxB,CAA+BC,KAA/B,CAAsCC,MAAtC,CAA8C,CAC5C,GAAI,CAACJ,SAASI,MAAT,CAAL,CAAuB,CACrB,MAAO,MAAP,CACD,CACD,GAAIC,MAAO,MAAOF,MAAlB,CACA,GAAIE,MAAQ,QAAR,CACKP,YAAYM,MAAZ,GAAuBL,QAAQI,KAAR,CAAeC,OAAOE,MAAtB,CAD5B,CAEKD,MAAQ,QAAR,EAAoBF,QAASC,OAFtC,CAGM,CACJ,MAAOR,IAAGQ,OAAOD,KAAP,CAAH,CAAkBD,KAAlB,CAAP,CACD,CACD,MAAO,MAAP,CACD,CAEDK,OAAOC,OAAP,CAAiBP,cAAjB","file":"_isIterateeCall.js","sourcesContent":["var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n"]}