{"version":3,"sources":["_assignValue.js"],"names":["baseAssignValue","require","eq","objectProto","Object","prototype","hasOwnProperty","assignValue","object","key","value","objValue","call","undefined","module","exports"],"mappings":"AAAA,GAAIA,iBAAkBC,QAAQ,oBAAR,CAAtB,CACIC,GAAKD,QAAQ,MAAR,CADT,CAIA,GAAIE,aAAcC,OAAOC,SAAzB,CAGA,GAAIC,gBAAiBH,YAAYG,cAAjC,CAYA,QAASC,YAAT,CAAqBC,MAArB,CAA6BC,GAA7B,CAAkCC,KAAlC,CAAyC,CACvC,GAAIC,UAAWH,OAAOC,GAAP,CAAf,CACA,GAAI,EAAEH,eAAeM,IAAf,CAAoBJ,MAApB,CAA4BC,GAA5B,GAAoCP,GAAGS,QAAH,CAAaD,KAAb,CAAtC,GACCA,QAAUG,SAAV,EAAuB,EAAEJ,MAAOD,OAAT,CAD5B,CAC+C,CAC7CR,gBAAgBQ,MAAhB,CAAwBC,GAAxB,CAA6BC,KAA7B,EACD,CACF,CAEDI,OAAOC,OAAP,CAAiBR,WAAjB","file":"_assignValue.js","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n"]}