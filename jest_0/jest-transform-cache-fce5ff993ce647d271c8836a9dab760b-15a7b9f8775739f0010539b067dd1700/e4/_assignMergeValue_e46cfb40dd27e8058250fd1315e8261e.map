{"version":3,"sources":["_assignMergeValue.js"],"names":["baseAssignValue","require","eq","assignMergeValue","object","key","value","undefined","module","exports"],"mappings":"AAAA,GAAIA,iBAAkBC,QAAQ,oBAAR,CAAtB,CACIC,GAAKD,QAAQ,MAAR,CADT,CAYA,QAASE,iBAAT,CAA0BC,MAA1B,CAAkCC,GAAlC,CAAuCC,KAAvC,CAA8C,CAC5C,GAAKA,QAAUC,SAAV,EAAuB,CAACL,GAAGE,OAAOC,GAAP,CAAH,CAAgBC,KAAhB,CAAzB,EACCA,QAAUC,SAAV,EAAuB,EAAEF,MAAOD,OAAT,CAD5B,CAC+C,CAC7CJ,gBAAgBI,MAAhB,CAAwBC,GAAxB,CAA6BC,KAA7B,EACD,CACF,CAEDE,OAAOC,OAAP,CAAiBN,gBAAjB","file":"_assignMergeValue.js","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n"]}