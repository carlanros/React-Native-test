{"version":3,"sources":["_baseFilter.js"],"names":["baseEach","require","baseFilter","collection","predicate","result","value","index","push","module","exports"],"mappings":"AAAA,GAAIA,UAAWC,QAAQ,aAAR,CAAf,CAUA,QAASC,WAAT,CAAoBC,UAApB,CAAgCC,SAAhC,CAA2C,CACzC,GAAIC,QAAS,EAAb,CACAL,SAASG,UAAT,CAAqB,SAASG,KAAT,CAAgBC,KAAhB,CAAuBJ,UAAvB,CAAmC,CACtD,GAAIC,UAAUE,KAAV,CAAiBC,KAAjB,CAAwBJ,UAAxB,CAAJ,CAAyC,CACvCE,OAAOG,IAAP,CAAYF,KAAZ,EACD,CACF,CAJD,EAKA,MAAOD,OAAP,CACD,CAEDI,OAAOC,OAAP,CAAiBR,UAAjB","file":"_baseFilter.js","sourcesContent":["var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n"]}