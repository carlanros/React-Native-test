{"version":3,"sources":["createMockConstants.js"],"names":["fs","require","JSON5","os","path","module","exports","createMockConstants","appConfig","_readAppConfiguration","expoConfig","expo","mockDeveloper","mockSlug","slug","mockLinkingUri","deviceId","deviceName","linkingUri","manifest","extra","json","nextDirectory","resolve","__dirname","currentDirectory","candidatePath","join","_safeReadFile","dirname","homedir","parse","filePath","options","readFileSync","e","code"],"mappings":"AAAA,aAEA,GAAMA,IAAKC,OAAL,MAAN,CACA,GAAMC,OAAQD,OAAR,SAAN,CACA,GAAME,IAAKF,OAAL,MAAN,CACA,GAAMG,MAAOH,OAAP,QAAN,CAMAI,OAAOC,OAAP,CAAiB,QAASC,oBAAT,EAA+B,CAC9C,GAAMC,WAAYC,uBAAlB,CACA,GAAMC,YAAcF,WAAaA,UAAUG,IAAxB,EAAiC,EAApD,CAEA,GAAMC,eAAgB,OAAtB,CACA,GAAMC,UAAWH,WAAWI,IAAX,EAAmB,MAApC,CACA,GAAMC,yBAA0BH,aAA1B,KAA2CC,QAA3C,KAAN,CAEA,MAAO,CACLG,SAAU,sCADL,CAELC,WAAY,YAFP,CAGLC,WAAYH,cAHP,CAILI,SAAU,CACRL,KAAMD,QADE,CAERO,MAAOV,WAAWU,KAFV,CAJL,CAAP,CASD,CAjBD,CAmBA,QAASX,sBAAT,EAAiC,CAC/B,GAAIY,MAAO,IAAX,CAIA,GAAIC,eAAgBlB,KAAKmB,OAAL,CAAaC,SAAb,CAAwB,IAAxB,CAA8B,IAA9B,CAAoC,IAApC,CAApB,CACA,GAAIC,wBAAJ,CACA,EAAG,CACDA,iBAAmBH,aAAnB,CAEA,GAAMI,eAAgBtB,KAAKuB,IAAL,CAAUF,gBAAV,CAA4B,UAA5B,CAAtB,CACAJ,KAAOO,cAAcF,aAAd,CAA6B,MAA7B,CAAP,CAEAJ,cAAgBlB,KAAKyB,OAAL,CAAaJ,gBAAb,CAAhB,CACD,CAPD,MAOSJ,MAAQ,IAAR,EAAgBI,mBAAqBH,aAArC,EAAsDG,mBAAqBtB,GAAG2B,OAAH,EAPpF,EASA,MAAOT,OAAQ,IAAR,CAAenB,MAAM6B,KAAN,CAAYV,IAAZ,CAAf,CAAmC,IAA1C,CACD,CAED,QAASO,cAAT,CAAuBI,QAAvB,CAAiCC,OAAjC,CAA0C,CACxC,GAAI,CACF,MAAOjC,IAAGkC,YAAH,CAAgBF,QAAhB,CAA0BC,OAA1B,CAAP,CACD,CAAC,MAAOE,CAAP,CAAU,CACV,GAAIA,EAAEC,IAAF,GAAW,QAAf,CAAyB,CACvB,KAAMD,EAAN,CACD,CACF,CACD,MAAO,KAAP,CACD","file":"createMockConstants.js","sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst JSON5 = require('json5');\nconst os = require('os');\nconst path = require('path');\n\n/**\n * Returns an object with mock exports for the Constants module, such as the\n * manifest.\n */\nmodule.exports = function createMockConstants() {\n  const appConfig = _readAppConfiguration();\n  const expoConfig = (appConfig && appConfig.expo) || {};\n\n  const mockDeveloper = '@test';\n  const mockSlug = expoConfig.slug || 'test';\n  const mockLinkingUri = `exp://${mockDeveloper}/${mockSlug}/+`;\n\n  return {\n    deviceId: 'a01650bb-918d-40be-87be-cf376ab6189f',\n    deviceName: 'Test Phone',\n    linkingUri: mockLinkingUri,\n    manifest: {\n      slug: mockSlug,\n      extra: expoConfig.extra,\n    },\n  };\n};\n\nfunction _readAppConfiguration() {\n  let json = null;\n\n  // This file is under <package>/node_modules/jest-expo/src and we want to\n  // start looking for app.json under <package>\n  let nextDirectory = path.resolve(__dirname, '..', '..', '..');\n  let currentDirectory;\n  do {\n    currentDirectory = nextDirectory;\n\n    const candidatePath = path.join(currentDirectory, 'app.json');\n    json = _safeReadFile(candidatePath, 'utf8');\n\n    nextDirectory = path.dirname(currentDirectory);\n  } while (json == null && currentDirectory !== nextDirectory && currentDirectory !== os.homedir());\n\n  return json != null ? JSON5.parse(json) : null;\n}\n\nfunction _safeReadFile(filePath, options) {\n  try {\n    return fs.readFileSync(filePath, options);\n  } catch (e) {\n    if (e.code !== 'ENOENT') {\n      throw e;\n    }\n  }\n  return null;\n}\n"]}