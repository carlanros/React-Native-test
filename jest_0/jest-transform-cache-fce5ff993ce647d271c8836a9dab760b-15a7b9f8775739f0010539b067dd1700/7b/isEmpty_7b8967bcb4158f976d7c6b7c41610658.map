{"version":3,"sources":["isEmpty.js"],"names":["baseKeys","require","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","mapTag","setTag","objectProto","Object","prototype","hasOwnProperty","isEmpty","value","splice","length","tag","size","key","call","module","exports"],"mappings":"AAAA,GAAIA,UAAWC,QAAQ,aAAR,CAAf,CACIC,OAASD,QAAQ,WAAR,CADb,CAEIE,YAAcF,QAAQ,eAAR,CAFlB,CAGIG,QAAUH,QAAQ,WAAR,CAHd,CAIII,YAAcJ,QAAQ,eAAR,CAJlB,CAKIK,SAAWL,QAAQ,YAAR,CALf,CAMIM,YAAcN,QAAQ,gBAAR,CANlB,CAOIO,aAAeP,QAAQ,gBAAR,CAPnB,CAUA,GAAIQ,QAAS,cAAb,CACIC,OAAS,cADb,CAIA,GAAIC,aAAcC,OAAOC,SAAzB,CAGA,GAAIC,gBAAiBH,YAAYG,cAAjC,CAmCA,QAASC,QAAT,CAAiBC,KAAjB,CAAwB,CACtB,GAAIA,OAAS,IAAb,CAAmB,CACjB,MAAO,KAAP,CACD,CACD,GAAIX,YAAYW,KAAZ,IACCZ,QAAQY,KAAR,GAAkB,MAAOA,MAAP,EAAgB,QAAlC,EAA8C,MAAOA,OAAMC,MAAb,EAAuB,UAArE,EACCX,SAASU,KAAT,CADD,EACoBR,aAAaQ,KAAb,CADpB,EAC2Cb,YAAYa,KAAZ,CAF5C,CAAJ,CAEqE,CACnE,MAAO,CAACA,MAAME,MAAd,CACD,CACD,GAAIC,KAAMjB,OAAOc,KAAP,CAAV,CACA,GAAIG,KAAOV,MAAP,EAAiBU,KAAOT,MAA5B,CAAoC,CAClC,MAAO,CAACM,MAAMI,IAAd,CACD,CACD,GAAIb,YAAYS,KAAZ,CAAJ,CAAwB,CACtB,MAAO,CAAChB,SAASgB,KAAT,EAAgBE,MAAxB,CACD,CACD,IAAK,GAAIG,IAAT,GAAgBL,MAAhB,CAAuB,CACrB,GAAIF,eAAeQ,IAAf,CAAoBN,KAApB,CAA2BK,GAA3B,CAAJ,CAAqC,CACnC,MAAO,MAAP,CACD,CACF,CACD,MAAO,KAAP,CACD,CAEDE,OAAOC,OAAP,CAAiBT,OAAjB","file":"isEmpty.js","sourcesContent":["var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n"]}