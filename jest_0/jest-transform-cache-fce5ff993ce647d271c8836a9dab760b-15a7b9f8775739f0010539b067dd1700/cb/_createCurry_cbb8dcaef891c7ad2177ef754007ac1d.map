{"version":3,"sources":["_createCurry.js"],"names":["apply","require","createCtor","createHybrid","createRecurry","getHolder","replaceHolders","root","createCurry","func","bitmask","arity","Ctor","wrapper","length","arguments","args","Array","index","placeholder","holders","undefined","fn","module","exports"],"mappings":"AAAA,GAAIA,OAAQC,QAAQ,UAAR,CAAZ,CACIC,WAAaD,QAAQ,eAAR,CADjB,CAEIE,aAAeF,QAAQ,iBAAR,CAFnB,CAGIG,cAAgBH,QAAQ,kBAAR,CAHpB,CAIII,UAAYJ,QAAQ,cAAR,CAJhB,CAKIK,eAAiBL,QAAQ,mBAAR,CALrB,CAMIM,KAAON,QAAQ,SAAR,CANX,CAiBA,QAASO,YAAT,CAAqBC,IAArB,CAA2BC,OAA3B,CAAoCC,KAApC,CAA2C,CACzC,GAAIC,MAAOV,WAAWO,IAAX,CAAX,CAEA,QAASI,QAAT,EAAmB,CACjB,GAAIC,QAASC,UAAUD,MAAvB,CACIE,KAAOC,MAAMH,MAAN,CADX,CAEII,MAAQJ,MAFZ,CAGIK,YAAcd,UAAUQ,OAAV,CAHlB,CAKA,MAAOK,OAAP,CAAgB,CACdF,KAAKE,KAAL,EAAcH,UAAUG,KAAV,CAAd,CACD,CACD,GAAIE,SAAWN,OAAS,CAAT,EAAcE,KAAK,CAAL,IAAYG,WAA1B,EAAyCH,KAAKF,OAAS,CAAd,IAAqBK,WAA/D,CACV,EADU,CAEVb,eAAeU,IAAf,CAAqBG,WAArB,CAFJ,CAIAL,QAAUM,QAAQN,MAAlB,CACA,GAAIA,OAASH,KAAb,CAAoB,CAClB,MAAOP,eACLK,IADK,CACCC,OADD,CACUP,YADV,CACwBU,QAAQM,WADhC,CAC6CE,SAD7C,CAELL,IAFK,CAECI,OAFD,CAEUC,SAFV,CAEqBA,SAFrB,CAEgCV,MAAQG,MAFxC,CAAP,CAGD,CACD,GAAIQ,IAAM,MAAQ,OAASf,IAAjB,EAAyB,eAAgBM,QAA1C,CAAqDD,IAArD,CAA4DH,IAArE,CACA,MAAOT,OAAMsB,EAAN,CAAU,IAAV,CAAgBN,IAAhB,CAAP,CACD,CACD,MAAOH,QAAP,CACD,CAEDU,OAAOC,OAAP,CAAiBhB,WAAjB","file":"_createCurry.js","sourcesContent":["var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    createHybrid = require('./_createHybrid'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createCurry;\n"]}