{"version":3,"sources":["_arrayFilter.js"],"names":["arrayFilter","array","predicate","index","length","resIndex","result","value","module","exports"],"mappings":"AASA,QAASA,YAAT,CAAqBC,KAArB,CAA4BC,SAA5B,CAAuC,CACrC,GAAIC,OAAQ,CAAC,CAAb,CACIC,OAASH,OAAS,IAAT,CAAgB,CAAhB,CAAoBA,MAAMG,MADvC,CAEIC,SAAW,CAFf,CAGIC,OAAS,EAHb,CAKA,MAAO,EAAEH,KAAF,CAAUC,MAAjB,CAAyB,CACvB,GAAIG,OAAQN,MAAME,KAAN,CAAZ,CACA,GAAID,UAAUK,KAAV,CAAiBJ,KAAjB,CAAwBF,KAAxB,CAAJ,CAAoC,CAClCK,OAAOD,UAAP,EAAqBE,KAArB,CACD,CACF,CACD,MAAOD,OAAP,CACD,CAEDE,OAAOC,OAAP,CAAiBT,WAAjB","file":"_arrayFilter.js","sourcesContent":["/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n"]}