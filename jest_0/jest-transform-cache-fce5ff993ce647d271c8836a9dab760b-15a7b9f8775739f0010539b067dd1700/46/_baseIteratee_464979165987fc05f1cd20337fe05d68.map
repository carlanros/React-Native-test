{"version":3,"sources":["_baseIteratee.js"],"names":["baseMatches","require","baseMatchesProperty","identity","isArray","property","baseIteratee","value","module","exports"],"mappings":"AAAA,GAAIA,aAAcC,QAAQ,gBAAR,CAAlB,CACIC,oBAAsBD,QAAQ,wBAAR,CAD1B,CAEIE,SAAWF,QAAQ,YAAR,CAFf,CAGIG,QAAUH,QAAQ,WAAR,CAHd,CAIII,SAAWJ,QAAQ,YAAR,CAJf,CAaA,QAASK,aAAT,CAAsBC,KAAtB,CAA6B,CAG3B,GAAI,MAAOA,MAAP,EAAgB,UAApB,CAAgC,CAC9B,MAAOA,MAAP,CACD,CACD,GAAIA,OAAS,IAAb,CAAmB,CACjB,MAAOJ,SAAP,CACD,CACD,GAAI,MAAOI,MAAP,EAAgB,QAApB,CAA8B,CAC5B,MAAOH,SAAQG,KAAR,EACHL,oBAAoBK,MAAM,CAAN,CAApB,CAA8BA,MAAM,CAAN,CAA9B,CADG,CAEHP,YAAYO,KAAZ,CAFJ,CAGD,CACD,MAAOF,UAASE,KAAT,CAAP,CACD,CAEDC,OAAOC,OAAP,CAAiBH,YAAjB","file":"_baseIteratee.js","sourcesContent":["var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n"]}