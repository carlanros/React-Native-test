{"version":3,"sources":["_setWrapToString.js"],"names":["getWrapDetails","require","insertWrapDetails","setToString","updateWrapDetails","setWrapToString","wrapper","reference","bitmask","source","module","exports"],"mappings":"AAAA,GAAIA,gBAAiBC,QAAQ,mBAAR,CAArB,CACIC,kBAAoBD,QAAQ,sBAAR,CADxB,CAEIE,YAAcF,QAAQ,gBAAR,CAFlB,CAGIG,kBAAoBH,QAAQ,sBAAR,CAHxB,CAeA,QAASI,gBAAT,CAAyBC,OAAzB,CAAkCC,SAAlC,CAA6CC,OAA7C,CAAsD,CACpD,GAAIC,QAAUF,UAAY,EAA1B,CACA,MAAOJ,aAAYG,OAAZ,CAAqBJ,kBAAkBO,MAAlB,CAA0BL,kBAAkBJ,eAAeS,MAAf,CAAlB,CAA0CD,OAA1C,CAA1B,CAArB,CAAP,CACD,CAEDE,OAAOC,OAAP,CAAiBN,eAAjB","file":"_setWrapToString.js","sourcesContent":["var getWrapDetails = require('./_getWrapDetails'),\n    insertWrapDetails = require('./_insertWrapDetails'),\n    setToString = require('./_setToString'),\n    updateWrapDetails = require('./_updateWrapDetails');\n\n/**\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n * with wrapper details in a comment at the top of the source body.\n *\n * @private\n * @param {Function} wrapper The function to modify.\n * @param {Function} reference The reference function.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Function} Returns `wrapper`.\n */\nfunction setWrapToString(wrapper, reference, bitmask) {\n  var source = (reference + '');\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n}\n\nmodule.exports = setWrapToString;\n"]}