{"version":3,"sources":["without.js"],"names":["baseDifference","require","baseRest","isArrayLikeObject","without","array","values","module","exports"],"mappings":"AAAA,GAAIA,gBAAiBC,QAAQ,mBAAR,CAArB,CACIC,SAAWD,QAAQ,aAAR,CADf,CAEIE,kBAAoBF,QAAQ,qBAAR,CAFxB,CAwBA,GAAIG,SAAUF,SAAS,SAASG,KAAT,CAAgBC,MAAhB,CAAwB,CAC7C,MAAOH,mBAAkBE,KAAlB,EACHL,eAAeK,KAAf,CAAsBC,MAAtB,CADG,CAEH,EAFJ,CAGD,CAJa,CAAd,CAMAC,OAAOC,OAAP,CAAiBJ,OAAjB","file":"without.js","sourcesContent":["var baseDifference = require('./_baseDifference'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.pull`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([2, 1, 2, 3], 1, 2);\n * // => [3]\n */\nvar without = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, values)\n    : [];\n});\n\nmodule.exports = without;\n"]}