{"version":3,"sources":["some.js"],"names":["arraySome","require","baseIteratee","baseSome","isArray","isIterateeCall","some","collection","predicate","guard","func","undefined","module","exports"],"mappings":"AAAA,GAAIA,WAAYC,QAAQ,cAAR,CAAhB,CACIC,aAAeD,QAAQ,iBAAR,CADnB,CAEIE,SAAWF,QAAQ,aAAR,CAFf,CAGIG,QAAUH,QAAQ,WAAR,CAHd,CAIII,eAAiBJ,QAAQ,mBAAR,CAJrB,CA0CA,QAASK,KAAT,CAAcC,UAAd,CAA0BC,SAA1B,CAAqCC,KAArC,CAA4C,CAC1C,GAAIC,MAAON,QAAQG,UAAR,EAAsBP,SAAtB,CAAkCG,QAA7C,CACA,GAAIM,OAASJ,eAAeE,UAAf,CAA2BC,SAA3B,CAAsCC,KAAtC,CAAb,CAA2D,CACzDD,UAAYG,SAAZ,CACD,CACD,MAAOD,MAAKH,UAAL,CAAiBL,aAAaM,SAAb,CAAwB,CAAxB,CAAjB,CAAP,CACD,CAEDI,OAAOC,OAAP,CAAiBP,IAAjB","file":"some.js","sourcesContent":["var arraySome = require('./_arraySome'),\n    baseIteratee = require('./_baseIteratee'),\n    baseSome = require('./_baseSome'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = some;\n"]}