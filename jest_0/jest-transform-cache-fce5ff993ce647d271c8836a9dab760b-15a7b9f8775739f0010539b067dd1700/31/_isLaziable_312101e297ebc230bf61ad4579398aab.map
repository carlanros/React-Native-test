{"version":3,"sources":["_isLaziable.js"],"names":["LazyWrapper","require","getData","getFuncName","lodash","isLaziable","func","funcName","other","prototype","data","module","exports"],"mappings":"AAAA,GAAIA,aAAcC,QAAQ,gBAAR,CAAlB,CACIC,QAAUD,QAAQ,YAAR,CADd,CAEIE,YAAcF,QAAQ,gBAAR,CAFlB,CAGIG,OAASH,QAAQ,iBAAR,CAHb,CAaA,QAASI,WAAT,CAAoBC,IAApB,CAA0B,CACxB,GAAIC,UAAWJ,YAAYG,IAAZ,CAAf,CACIE,MAAQJ,OAAOG,QAAP,CADZ,CAGA,GAAI,MAAOC,MAAP,EAAgB,UAAhB,EAA8B,EAAED,WAAYP,aAAYS,SAA1B,CAAlC,CAAwE,CACtE,MAAO,MAAP,CACD,CACD,GAAIH,OAASE,KAAb,CAAoB,CAClB,MAAO,KAAP,CACD,CACD,GAAIE,MAAOR,QAAQM,KAAR,CAAX,CACA,MAAO,CAAC,CAACE,IAAF,EAAUJ,OAASI,KAAK,CAAL,CAA1B,CACD,CAEDC,OAAOC,OAAP,CAAiBP,UAAjB","file":"_isLaziable.js","sourcesContent":["var LazyWrapper = require('./_LazyWrapper'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    lodash = require('./wrapperLodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n"]}