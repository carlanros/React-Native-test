{"version":3,"sources":["_arrayReduce.js"],"names":["arrayReduce","array","iteratee","accumulator","initAccum","index","length","module","exports"],"mappings":"AAYA,QAASA,YAAT,CAAqBC,KAArB,CAA4BC,QAA5B,CAAsCC,WAAtC,CAAmDC,SAAnD,CAA8D,CAC5D,GAAIC,OAAQ,CAAC,CAAb,CACIC,OAASL,OAAS,IAAT,CAAgB,CAAhB,CAAoBA,MAAMK,MADvC,CAGA,GAAIF,WAAaE,MAAjB,CAAyB,CACvBH,YAAcF,MAAM,EAAEI,KAAR,CAAd,CACD,CACD,MAAO,EAAEA,KAAF,CAAUC,MAAjB,CAAyB,CACvBH,YAAcD,SAASC,WAAT,CAAsBF,MAAMI,KAAN,CAAtB,CAAoCA,KAApC,CAA2CJ,KAA3C,CAAd,CACD,CACD,MAAOE,YAAP,CACD,CAEDI,OAAOC,OAAP,CAAiBR,WAAjB","file":"_arrayReduce.js","sourcesContent":["/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n"]}