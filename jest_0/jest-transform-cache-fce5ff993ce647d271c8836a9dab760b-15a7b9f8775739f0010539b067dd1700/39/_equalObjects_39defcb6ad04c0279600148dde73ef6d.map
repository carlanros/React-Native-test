{"version":3,"sources":["_equalObjects.js"],"names":["getAllKeys","require","COMPARE_PARTIAL_FLAG","objectProto","Object","prototype","hasOwnProperty","equalObjects","object","other","bitmask","customizer","equalFunc","stack","isPartial","objProps","objLength","length","othProps","othLength","index","key","call","stacked","get","result","set","skipCtor","objValue","othValue","compared","undefined","objCtor","constructor","othCtor","module","exports"],"mappings":"AAAA,GAAIA,YAAaC,QAAQ,eAAR,CAAjB,CAGA,GAAIC,sBAAuB,CAA3B,CAGA,GAAIC,aAAcC,OAAOC,SAAzB,CAGA,GAAIC,gBAAiBH,YAAYG,cAAjC,CAeA,QAASC,aAAT,CAAsBC,MAAtB,CAA8BC,KAA9B,CAAqCC,OAArC,CAA8CC,UAA9C,CAA0DC,SAA1D,CAAqEC,KAArE,CAA4E,CAC1E,GAAIC,WAAYJ,QAAUR,oBAA1B,CACIa,SAAWf,WAAWQ,MAAX,CADf,CAEIQ,UAAYD,SAASE,MAFzB,CAGIC,SAAWlB,WAAWS,KAAX,CAHf,CAIIU,UAAYD,SAASD,MAJzB,CAMA,GAAID,WAAaG,SAAb,EAA0B,CAACL,SAA/B,CAA0C,CACxC,MAAO,MAAP,CACD,CACD,GAAIM,OAAQJ,SAAZ,CACA,MAAOI,OAAP,CAAgB,CACd,GAAIC,KAAMN,SAASK,KAAT,CAAV,CACA,GAAI,EAAEN,UAAYO,MAAOZ,MAAnB,CAA2BH,eAAegB,IAAf,CAAoBb,KAApB,CAA2BY,GAA3B,CAA7B,CAAJ,CAAmE,CACjE,MAAO,MAAP,CACD,CACF,CAED,GAAIE,SAAUV,MAAMW,GAAN,CAAUhB,MAAV,CAAd,CACA,GAAIe,SAAWV,MAAMW,GAAN,CAAUf,KAAV,CAAf,CAAiC,CAC/B,MAAOc,UAAWd,KAAlB,CACD,CACD,GAAIgB,QAAS,IAAb,CACAZ,MAAMa,GAAN,CAAUlB,MAAV,CAAkBC,KAAlB,EACAI,MAAMa,GAAN,CAAUjB,KAAV,CAAiBD,MAAjB,EAEA,GAAImB,UAAWb,SAAf,CACA,MAAO,EAAEM,KAAF,CAAUJ,SAAjB,CAA4B,CAC1BK,IAAMN,SAASK,KAAT,CAAN,CACA,GAAIQ,UAAWpB,OAAOa,GAAP,CAAf,CACIQ,SAAWpB,MAAMY,GAAN,CADf,CAGA,GAAIV,UAAJ,CAAgB,CACd,GAAImB,UAAWhB,UACXH,WAAWkB,QAAX,CAAqBD,QAArB,CAA+BP,GAA/B,CAAoCZ,KAApC,CAA2CD,MAA3C,CAAmDK,KAAnD,CADW,CAEXF,WAAWiB,QAAX,CAAqBC,QAArB,CAA+BR,GAA/B,CAAoCb,MAApC,CAA4CC,KAA5C,CAAmDI,KAAnD,CAFJ,CAGD,CAED,GAAI,EAAEiB,WAAaC,SAAb,CACGH,WAAaC,QAAb,EAAyBjB,UAAUgB,QAAV,CAAoBC,QAApB,CAA8BnB,OAA9B,CAAuCC,UAAvC,CAAmDE,KAAnD,CAD5B,CAEEiB,QAFJ,CAAJ,CAGO,CACLL,OAAS,KAAT,CACA,MACD,CACDE,WAAaA,SAAWN,KAAO,aAA/B,EACD,CACD,GAAII,QAAU,CAACE,QAAf,CAAyB,CACvB,GAAIK,SAAUxB,OAAOyB,WAArB,CACIC,QAAUzB,MAAMwB,WADpB,CAIA,GAAID,SAAWE,OAAX,EACC,eAAiB1B,OAAjB,EAA2B,eAAiBC,MAD7C,EAEA,EAAE,MAAOuB,QAAP,EAAkB,UAAlB,EAAgCA,kBAAmBA,QAAnD,EACA,MAAOE,QAAP,EAAkB,UADlB,EACgCA,kBAAmBA,QADrD,CAFJ,CAGmE,CACjET,OAAS,KAAT,CACD,CACF,CACDZ,MAAM,QAAN,EAAgBL,MAAhB,EACAK,MAAM,QAAN,EAAgBJ,KAAhB,EACA,MAAOgB,OAAP,CACD,CAEDU,OAAOC,OAAP,CAAiB7B,YAAjB","file":"_equalObjects.js","sourcesContent":["var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n"]}