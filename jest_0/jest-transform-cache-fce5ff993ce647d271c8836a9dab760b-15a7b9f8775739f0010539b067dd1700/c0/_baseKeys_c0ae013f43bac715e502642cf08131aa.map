{"version":3,"sources":["_baseKeys.js"],"names":["isPrototype","require","nativeKeys","objectProto","Object","prototype","hasOwnProperty","baseKeys","object","result","key","call","push","module","exports"],"mappings":"AAAA,GAAIA,aAAcC,QAAQ,gBAAR,CAAlB,CACIC,WAAaD,QAAQ,eAAR,CADjB,CAIA,GAAIE,aAAcC,OAAOC,SAAzB,CAGA,GAAIC,gBAAiBH,YAAYG,cAAjC,CASA,QAASC,SAAT,CAAkBC,MAAlB,CAA0B,CACxB,GAAI,CAACR,YAAYQ,MAAZ,CAAL,CAA0B,CACxB,MAAON,YAAWM,MAAX,CAAP,CACD,CACD,GAAIC,QAAS,EAAb,CACA,IAAK,GAAIC,IAAT,GAAgBN,QAAOI,MAAP,CAAhB,CAAgC,CAC9B,GAAIF,eAAeK,IAAf,CAAoBH,MAApB,CAA4BE,GAA5B,GAAoCA,KAAO,aAA/C,CAA8D,CAC5DD,OAAOG,IAAP,CAAYF,GAAZ,EACD,CACF,CACD,MAAOD,OAAP,CACD,CAEDI,OAAOC,OAAP,CAAiBP,QAAjB","file":"_baseKeys.js","sourcesContent":["var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n"]}