{"version":3,"sources":["_baseReduce.js"],"names":["baseReduce","collection","iteratee","accumulator","initAccum","eachFunc","value","index","module","exports"],"mappings":"AAaA,QAASA,WAAT,CAAoBC,UAApB,CAAgCC,QAAhC,CAA0CC,WAA1C,CAAuDC,SAAvD,CAAkEC,QAAlE,CAA4E,CAC1EA,SAASJ,UAAT,CAAqB,SAASK,KAAT,CAAgBC,KAAhB,CAAuBN,UAAvB,CAAmC,CACtDE,YAAcC,WACTA,UAAY,KAAZ,CAAmBE,KADV,EAEVJ,SAASC,WAAT,CAAsBG,KAAtB,CAA6BC,KAA7B,CAAoCN,UAApC,CAFJ,CAGD,CAJD,EAKA,MAAOE,YAAP,CACD,CAEDK,OAAOC,OAAP,CAAiBT,UAAjB","file":"_baseReduce.js","sourcesContent":["/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n"]}