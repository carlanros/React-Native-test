{"version":3,"sources":["_shortOut.js"],"names":["HOT_COUNT","HOT_SPAN","nativeNow","Date","now","shortOut","func","count","lastCalled","stamp","remaining","arguments","apply","undefined","module","exports"],"mappings":"AACA,GAAIA,WAAY,GAAhB,CACIC,SAAW,EADf,CAIA,GAAIC,WAAYC,KAAKC,GAArB,CAWA,QAASC,SAAT,CAAkBC,IAAlB,CAAwB,CACtB,GAAIC,OAAQ,CAAZ,CACIC,WAAa,CADjB,CAGA,MAAO,WAAW,CAChB,GAAIC,OAAQP,WAAZ,CACIQ,UAAYT,UAAYQ,MAAQD,UAApB,CADhB,CAGAA,WAAaC,KAAb,CACA,GAAIC,UAAY,CAAhB,CAAmB,CACjB,GAAI,EAAEH,KAAF,EAAWP,SAAf,CAA0B,CACxB,MAAOW,WAAU,CAAV,CAAP,CACD,CACF,CAJD,IAIO,CACLJ,MAAQ,CAAR,CACD,CACD,MAAOD,MAAKM,KAAL,CAAWC,SAAX,CAAsBF,SAAtB,CAAP,CACD,CAbD,CAcD,CAEDG,OAAOC,OAAP,CAAiBV,QAAjB","file":"_shortOut.js","sourcesContent":["/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n"]}