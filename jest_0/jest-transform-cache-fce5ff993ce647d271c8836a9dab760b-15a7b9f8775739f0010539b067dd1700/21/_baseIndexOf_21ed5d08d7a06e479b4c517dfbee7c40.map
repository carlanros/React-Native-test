{"version":3,"sources":["_baseIndexOf.js"],"names":["baseFindIndex","require","baseIsNaN","strictIndexOf","baseIndexOf","array","value","fromIndex","module","exports"],"mappings":"AAAA,GAAIA,eAAgBC,QAAQ,kBAAR,CAApB,CACIC,UAAYD,QAAQ,cAAR,CADhB,CAEIE,cAAgBF,QAAQ,kBAAR,CAFpB,CAaA,QAASG,YAAT,CAAqBC,KAArB,CAA4BC,KAA5B,CAAmCC,SAAnC,CAA8C,CAC5C,MAAOD,SAAUA,KAAV,CACHH,cAAcE,KAAd,CAAqBC,KAArB,CAA4BC,SAA5B,CADG,CAEHP,cAAcK,KAAd,CAAqBH,SAArB,CAAgCK,SAAhC,CAFJ,CAGD,CAEDC,OAAOC,OAAP,CAAiBL,WAAjB","file":"_baseIndexOf.js","sourcesContent":["var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n"]}