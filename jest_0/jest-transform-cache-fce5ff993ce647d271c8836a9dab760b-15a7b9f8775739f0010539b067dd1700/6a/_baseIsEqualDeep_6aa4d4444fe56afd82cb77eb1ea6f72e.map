{"version":3,"sources":["_baseIsEqualDeep.js"],"names":["Stack","require","equalArrays","equalByTag","equalObjects","getTag","isArray","isBuffer","isTypedArray","COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","objectProto","Object","prototype","hasOwnProperty","baseIsEqualDeep","object","other","bitmask","customizer","equalFunc","stack","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","call","othIsWrapped","objUnwrapped","value","othUnwrapped","module","exports"],"mappings":"AAAA,GAAIA,OAAQC,QAAQ,UAAR,CAAZ,CACIC,YAAcD,QAAQ,gBAAR,CADlB,CAEIE,WAAaF,QAAQ,eAAR,CAFjB,CAGIG,aAAeH,QAAQ,iBAAR,CAHnB,CAIII,OAASJ,QAAQ,WAAR,CAJb,CAKIK,QAAUL,QAAQ,WAAR,CALd,CAMIM,SAAWN,QAAQ,YAAR,CANf,CAOIO,aAAeP,QAAQ,gBAAR,CAPnB,CAUA,GAAIQ,sBAAuB,CAA3B,CAGA,GAAIC,SAAU,oBAAd,CACIC,SAAW,gBADf,CAEIC,UAAY,iBAFhB,CAKA,GAAIC,aAAcC,OAAOC,SAAzB,CAGA,GAAIC,gBAAiBH,YAAYG,cAAjC,CAgBA,QAASC,gBAAT,CAAyBC,MAAzB,CAAiCC,KAAjC,CAAwCC,OAAxC,CAAiDC,UAAjD,CAA6DC,SAA7D,CAAwEC,KAAxE,CAA+E,CAC7E,GAAIC,UAAWlB,QAAQY,MAAR,CAAf,CACIO,SAAWnB,QAAQa,KAAR,CADf,CAEIO,OAASF,SAAWb,QAAX,CAAsBN,OAAOa,MAAP,CAFnC,CAGIS,OAASF,SAAWd,QAAX,CAAsBN,OAAOc,KAAP,CAHnC,CAKAO,OAASA,QAAUhB,OAAV,CAAoBE,SAApB,CAAgCc,MAAzC,CACAC,OAASA,QAAUjB,OAAV,CAAoBE,SAApB,CAAgCe,MAAzC,CAEA,GAAIC,UAAWF,QAAUd,SAAzB,CACIiB,SAAWF,QAAUf,SADzB,CAEIkB,UAAYJ,QAAUC,MAF1B,CAIA,GAAIG,WAAavB,SAASW,MAAT,CAAjB,CAAmC,CACjC,GAAI,CAACX,SAASY,KAAT,CAAL,CAAsB,CACpB,MAAO,MAAP,CACD,CACDK,SAAW,IAAX,CACAI,SAAW,KAAX,CACD,CACD,GAAIE,WAAa,CAACF,QAAlB,CAA4B,CAC1BL,QAAUA,MAAQ,GAAIvB,MAAJ,EAAlB,EACA,MAAQwB,WAAYhB,aAAaU,MAAb,CAAb,CACHhB,YAAYgB,MAAZ,CAAoBC,KAApB,CAA2BC,OAA3B,CAAoCC,UAApC,CAAgDC,SAAhD,CAA2DC,KAA3D,CADG,CAEHpB,WAAWe,MAAX,CAAmBC,KAAnB,CAA0BO,MAA1B,CAAkCN,OAAlC,CAA2CC,UAA3C,CAAuDC,SAAvD,CAAkEC,KAAlE,CAFJ,CAGD,CACD,GAAI,EAAEH,QAAUX,oBAAZ,CAAJ,CAAuC,CACrC,GAAIsB,cAAeH,UAAYZ,eAAegB,IAAf,CAAoBd,MAApB,CAA4B,aAA5B,CAA/B,CACIe,aAAeJ,UAAYb,eAAegB,IAAf,CAAoBb,KAApB,CAA2B,aAA3B,CAD/B,CAGA,GAAIY,cAAgBE,YAApB,CAAkC,CAChC,GAAIC,cAAeH,aAAeb,OAAOiB,KAAP,EAAf,CAAgCjB,MAAnD,CACIkB,aAAeH,aAAed,MAAMgB,KAAN,EAAf,CAA+BhB,KADlD,CAGAI,QAAUA,MAAQ,GAAIvB,MAAJ,EAAlB,EACA,MAAOsB,WAAUY,YAAV,CAAwBE,YAAxB,CAAsChB,OAAtC,CAA+CC,UAA/C,CAA2DE,KAA3D,CAAP,CACD,CACF,CACD,GAAI,CAACO,SAAL,CAAgB,CACd,MAAO,MAAP,CACD,CACDP,QAAUA,MAAQ,GAAIvB,MAAJ,EAAlB,EACA,MAAOI,cAAac,MAAb,CAAqBC,KAArB,CAA4BC,OAA5B,CAAqCC,UAArC,CAAiDC,SAAjD,CAA4DC,KAA5D,CAAP,CACD,CAEDc,OAAOC,OAAP,CAAiBrB,eAAjB","file":"_baseIsEqualDeep.js","sourcesContent":["var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n"]}