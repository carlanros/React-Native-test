{"version":3,"sources":["setup.js"],"names":["jest","mock","registerAsset","fn","getAssetByID","fileSystemLocation","httpServerLocation","scales","fileHashes","name","exists","type","hash","uri","width","height","require","Response","Request","Headers","fetch","global","mockNativeModules","createMockConstants","window","navigator","mockImageLoader","configurable","enumerable","get","prefetchImage","getSize","success","process","nextTick","Object","defineProperty","expoModules","expoModuleCustomMocks","ExponentCameraManager","FaceDetection","Landmarks","Classifications","Mode","ExponentConstants","ExponentFileSystem","downloadAsync","Promise","resolve","md5","getInfoAsync","moduleName","moduleProperties","mockedProperties","keys","propertyName","property","propertyType","customMock","hasOwnProperty","mockValue","undefined","functionType","doMock"],"mappings":"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","file":"setup.js","sourcesContent":["/**\n * Adds Expo-related mocks to the Jest environment. Jest runs this setup module\n * after it runs the React Native setup module.\n */\n'use strict';\n\nconst { Response, Request, Headers, fetch } = require('whatwg-fetch');\nglobal.Response = Response;\nglobal.Request = Request;\nglobal.Headers = Headers;\nglobal.fetch = fetch;\n\nconst mockNativeModules = require('react-native/Libraries/BatchedBridge/NativeModules');\n\nconst createMockConstants = require('./createMockConstants');\n\n// window isn't defined as of react-native 0.45+ it seems\nif (typeof window !== 'object') {\n  global.window = global;\n  global.window.navigator = {};\n}\n\nconst mockImageLoader = {\n  configurable: true,\n  enumerable: true,\n  get: () => ({\n    prefetchImage: jest.fn(),\n    getSize: jest.fn((uri, success) => process.nextTick(() => success(320, 240))),\n  }),\n};\nObject.defineProperty(mockNativeModules, 'ImageLoader', mockImageLoader);\nObject.defineProperty(mockNativeModules, 'ImageViewManager', mockImageLoader);\n\nconst expoModules = require('./expoModules');\nconst expoModuleCustomMocks = {\n  ExponentCameraManager: {\n    FaceDetection: { Landmarks: {}, Classifications: {}, Mode: {} },\n  },\n  ExponentConstants: createMockConstants(),\n  ExponentFileSystem: {\n    downloadAsync: jest.fn(() => Promise.resolve({ md5: 'md5', uri: 'uri' })),\n    getInfoAsync: jest.fn(() => Promise.resolve({ exists: true, md5: 'md5', uri: 'uri' })),\n  },\n};\n\nfor (let moduleName of Object.keys(expoModules)) {\n  const moduleProperties = expoModules[moduleName];\n  const mockedProperties = {};\n\n  for (let propertyName of Object.keys(moduleProperties)) {\n    const property = moduleProperties[propertyName];\n    const propertyType = property.type;\n    const customMock =\n      expoModuleCustomMocks[moduleName] &&\n      expoModuleCustomMocks[moduleName].hasOwnProperty(propertyName)\n        ? expoModuleCustomMocks[moduleName][propertyName]\n        : property.mock;\n\n    let mockValue;\n    if (customMock !== undefined) {\n      mockValue = customMock;\n    } else if (propertyType === 'function') {\n      if (property.functionType === 'promise') {\n        mockValue = jest.fn(() => Promise.resolve());\n      } else {\n        mockValue = jest.fn();\n      }\n    } else if (propertyType === 'number') {\n      mockValue = 1;\n    } else if (propertyType === 'string') {\n      mockValue = 'mock';\n    } else if (propertyType === 'array') {\n      mockValue = [];\n    } else {\n      mockValue = {};\n    }\n\n    mockedProperties[propertyName] = mockValue;\n  }\n\n  Object.defineProperty(mockNativeModules, moduleName, {\n    configurable: true,\n    enumerable: true,\n    get: () => mockedProperties,\n  });\n}\n\njest.mock('react-native/Libraries/Image/AssetRegistry', () => ({\n  registerAsset: jest.fn(() => 1),\n  getAssetByID: jest.fn(() => ({\n    fileSystemLocation: '/full/path/to/directory',\n    httpServerLocation: '/assets/full/path/to/directory',\n    scales: [1],\n    fileHashes: ['md5'],\n    name: 'name',\n    exists: true,\n    type: 'type',\n    hash: 'md5',\n    uri: 'uri',\n    width: 1,\n    height: 1,\n  })),\n}));\n\njest.doMock('react-native/Libraries/BatchedBridge/NativeModules', () => mockNativeModules);\n"]}