b4cf81c752b18aec4676654d2a7fc57a
'use strict';jest.mock('react-native/Libraries/Image/AssetRegistry',function(){return{registerAsset:jest.fn(function(){return 1;}),getAssetByID:jest.fn(function(){return{fileSystemLocation:'/full/path/to/directory',httpServerLocation:'/assets/full/path/to/directory',scales:[1],fileHashes:['md5'],name:'name',exists:true,type:'type',hash:'md5',uri:'uri',width:1,height:1};})};});var _require=require('whatwg-fetch'),Response=_require.Response,Request=_require.Request,Headers=_require.Headers,fetch=_require.fetch;global.Response=Response;global.Request=Request;global.Headers=Headers;global.fetch=fetch;var mockNativeModules=require('react-native/Libraries/BatchedBridge/NativeModules');var createMockConstants=require('./createMockConstants');if(typeof window!=='object'){global.window=global;global.window.navigator={};}var mockImageLoader={configurable:true,enumerable:true,get:function get(){return{prefetchImage:jest.fn(),getSize:jest.fn(function(uri,success){return process.nextTick(function(){return success(320,240);});})};}};Object.defineProperty(mockNativeModules,'ImageLoader',mockImageLoader);Object.defineProperty(mockNativeModules,'ImageViewManager',mockImageLoader);var expoModules=require('./expoModules');var expoModuleCustomMocks={ExponentCameraManager:{FaceDetection:{Landmarks:{},Classifications:{},Mode:{}}},ExponentConstants:createMockConstants(),ExponentFileSystem:{downloadAsync:jest.fn(function(){return Promise.resolve({md5:'md5',uri:'uri'});}),getInfoAsync:jest.fn(function(){return Promise.resolve({exists:true,md5:'md5',uri:'uri'});})}};var _loop=function _loop(moduleName){var moduleProperties=expoModules[moduleName];var mockedProperties={};for(var _iterator2=Object.keys(moduleProperties),_isArray2=Array.isArray(_iterator2),_i2=0,_iterator2=_isArray2?_iterator2:_iterator2[typeof Symbol==='function'?Symbol.iterator:'@@iterator']();;){var _ref2;if(_isArray2){if(_i2>=_iterator2.length)break;_ref2=_iterator2[_i2++];}else{_i2=_iterator2.next();if(_i2.done)break;_ref2=_i2.value;}var propertyName=_ref2;var property=moduleProperties[propertyName];var propertyType=property.type;var customMock=expoModuleCustomMocks[moduleName]&&expoModuleCustomMocks[moduleName].hasOwnProperty(propertyName)?expoModuleCustomMocks[moduleName][propertyName]:property.mock;var mockValue=void 0;if(customMock!==undefined){mockValue=customMock;}else if(propertyType==='function'){if(property.functionType==='promise'){mockValue=jest.fn(function(){return Promise.resolve();});}else{mockValue=jest.fn();}}else if(propertyType==='number'){mockValue=1;}else if(propertyType==='string'){mockValue='mock';}else if(propertyType==='array'){mockValue=[];}else{mockValue={};}mockedProperties[propertyName]=mockValue;}Object.defineProperty(mockNativeModules,moduleName,{configurable:true,enumerable:true,get:function get(){return mockedProperties;}});};for(var _iterator=Object.keys(expoModules),_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==='function'?Symbol.iterator:'@@iterator']();;){var _ref;if(_isArray){if(_i>=_iterator.length)break;_ref=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref=_i.value;}var moduleName=_ref;_loop(moduleName);}jest.doMock('react-native/Libraries/BatchedBridge/NativeModules',function(){return mockNativeModules;});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,