{"version":3,"sources":["_baseUniq.js"],"names":["SetCache","require","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","LARGE_ARRAY_SIZE","baseUniq","array","iteratee","comparator","index","includes","length","isCommon","result","seen","set","outer","value","computed","seenIndex","push","module","exports"],"mappings":"AAAA,GAAIA,UAAWC,QAAQ,aAAR,CAAf,CACIC,cAAgBD,QAAQ,kBAAR,CADpB,CAEIE,kBAAoBF,QAAQ,sBAAR,CAFxB,CAGIG,SAAWH,QAAQ,aAAR,CAHf,CAIII,UAAYJ,QAAQ,cAAR,CAJhB,CAKIK,WAAaL,QAAQ,eAAR,CALjB,CAQA,GAAIM,kBAAmB,GAAvB,CAWA,QAASC,SAAT,CAAkBC,KAAlB,CAAyBC,QAAzB,CAAmCC,UAAnC,CAA+C,CAC7C,GAAIC,OAAQ,CAAC,CAAb,CACIC,SAAWX,aADf,CAEIY,OAASL,MAAMK,MAFnB,CAGIC,SAAW,IAHf,CAIIC,OAAS,EAJb,CAKIC,KAAOD,MALX,CAOA,GAAIL,UAAJ,CAAgB,CACdI,SAAW,KAAX,CACAF,SAAWV,iBAAX,CACD,CAHD,IAIK,IAAIW,QAAUP,gBAAd,CAAgC,CACnC,GAAIW,KAAMR,SAAW,IAAX,CAAkBL,UAAUI,KAAV,CAA5B,CACA,GAAIS,GAAJ,CAAS,CACP,MAAOZ,YAAWY,GAAX,CAAP,CACD,CACDH,SAAW,KAAX,CACAF,SAAWT,QAAX,CACAa,KAAO,GAAIjB,SAAJ,EAAP,CACD,CARI,IASA,CACHiB,KAAOP,SAAW,EAAX,CAAgBM,MAAvB,CACD,CACDG,MACA,MAAO,EAAEP,KAAF,CAAUE,MAAjB,CAAyB,CACvB,GAAIM,OAAQX,MAAMG,KAAN,CAAZ,CACIS,SAAWX,SAAWA,SAASU,KAAT,CAAX,CAA6BA,KAD5C,CAGAA,MAAST,YAAcS,QAAU,CAAzB,CAA8BA,KAA9B,CAAsC,CAA9C,CACA,GAAIL,UAAYM,WAAaA,QAA7B,CAAuC,CACrC,GAAIC,WAAYL,KAAKH,MAArB,CACA,MAAOQ,WAAP,CAAoB,CAClB,GAAIL,KAAKK,SAAL,IAAoBD,QAAxB,CAAkC,CAChC,QAASF,MAAT,CACD,CACF,CACD,GAAIT,QAAJ,CAAc,CACZO,KAAKM,IAAL,CAAUF,QAAV,EACD,CACDL,OAAOO,IAAP,CAAYH,KAAZ,EACD,CAXD,IAYK,IAAI,CAACP,SAASI,IAAT,CAAeI,QAAf,CAAyBV,UAAzB,CAAL,CAA2C,CAC9C,GAAIM,OAASD,MAAb,CAAqB,CACnBC,KAAKM,IAAL,CAAUF,QAAV,EACD,CACDL,OAAOO,IAAP,CAAYH,KAAZ,EACD,CACF,CACD,MAAOJ,OAAP,CACD,CAEDQ,OAAOC,OAAP,CAAiBjB,QAAjB","file":"_baseUniq.js","sourcesContent":["var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n"]}