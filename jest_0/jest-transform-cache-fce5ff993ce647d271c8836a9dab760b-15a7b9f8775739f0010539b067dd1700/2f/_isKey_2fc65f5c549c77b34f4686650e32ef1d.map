{"version":3,"sources":["_isKey.js"],"names":["isArray","require","isSymbol","reIsDeepProp","reIsPlainProp","isKey","value","object","type","test","Object","module","exports"],"mappings":"AAAA,GAAIA,SAAUC,QAAQ,WAAR,CAAd,CACIC,SAAWD,QAAQ,YAAR,CADf,CAIA,GAAIE,cAAe,kDAAnB,CACIC,cAAgB,OADpB,CAWA,QAASC,MAAT,CAAeC,KAAf,CAAsBC,MAAtB,CAA8B,CAC5B,GAAIP,QAAQM,KAAR,CAAJ,CAAoB,CAClB,MAAO,MAAP,CACD,CACD,GAAIE,MAAO,MAAOF,MAAlB,CACA,GAAIE,MAAQ,QAAR,EAAoBA,MAAQ,QAA5B,EAAwCA,MAAQ,SAAhD,EACAF,OAAS,IADT,EACiBJ,SAASI,KAAT,CADrB,CACsC,CACpC,MAAO,KAAP,CACD,CACD,MAAOF,eAAcK,IAAd,CAAmBH,KAAnB,GAA6B,CAACH,aAAaM,IAAb,CAAkBH,KAAlB,CAA9B,EACJC,QAAU,IAAV,EAAkBD,QAASI,QAAOH,MAAP,CAD9B,CAED,CAEDI,OAAOC,OAAP,CAAiBP,KAAjB","file":"_isKey.js","sourcesContent":["var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n"]}