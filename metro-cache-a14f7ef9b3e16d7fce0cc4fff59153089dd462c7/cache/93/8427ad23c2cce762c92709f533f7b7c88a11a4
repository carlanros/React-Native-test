__d(function (global, require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

    var _types = require(_dependencyMap[0], "../types");

    var login = _interopRequireWildcard(_types);

    function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

    var initialState = {
        user: null,
        isLoggedIn: false
    };

    function CreateLoginState(isLoggedIn, user) {
        return {
            isLoggedIn: isLoggedIn,
            user: user
        };
    }

    var LoginReducer = function LoginReducer() {
        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
        var action = arguments[1];

        switch (action.type) {
            case login.LoginConstants.LOGIN_FAILED:
                return _extends({}, state, CreateLoginState(false, null));

            case login.LoginConstants.LOGIN_SUCCESS:
                return _extends({}, state, CreateLoginState(true, action.user));

            default:
                return state;
        }
    };

    exports.default = LoginReducer;
});