// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components Navigator should render self and subcomponents 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AppNavigator />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <View
        hideNavBar={true}
        panHandlers={null}
      >
        <View>
          <UNDEFINED
            activeBackgroundColor="blue"
            activeTintColor="yellow"
            inactiveBackgroundColor="black"
            inactiveTintColor="grey"
            lazy={true}
            tabBarPosition="bottom"
          >
            <View
              back={false}
              component={undefined}
              hideNavBar={true}
              icon={[Function]}
              tabBarLabel="Start"
              tintColor="white"
            />
            <View
              back={false}
              component={undefined}
              hideNavBar={true}
              icon={[Function]}
              tabBarLabel="Login 2"
              tintColor="white"
            />
          </UNDEFINED>
          <View
            back={false}
            component={undefined}
            hideNavBar={true}
          />
        </View>
      </View>,
      "uriPrefix": "myapp://",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": "root",
      "nodeType": "host",
      "props": Object {
        "children": <View>
          <UNDEFINED
            activeBackgroundColor="blue"
            activeTintColor="yellow"
            inactiveBackgroundColor="black"
            inactiveTintColor="grey"
            lazy={true}
            tabBarPosition="bottom"
          >
            <View
              back={false}
              component={undefined}
              hideNavBar={true}
              icon={[Function]}
              tabBarLabel="Start"
              tintColor="white"
            />
            <View
              back={false}
              component={undefined}
              hideNavBar={true}
              icon={[Function]}
              tabBarLabel="Login 2"
              tintColor="white"
            />
          </UNDEFINED>
          <View
            back={false}
            component={undefined}
            hideNavBar={true}
          />
        </View>,
        "hideNavBar": true,
        "panHandlers": null,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": "modal",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <UNDEFINED
              activeBackgroundColor="blue"
              activeTintColor="yellow"
              inactiveBackgroundColor="black"
              inactiveTintColor="grey"
              lazy={true}
              tabBarPosition="bottom"
            >
              <View
                back={false}
                component={undefined}
                hideNavBar={true}
                icon={[Function]}
                tabBarLabel="Start"
                tintColor="white"
              />
              <View
                back={false}
                component={undefined}
                hideNavBar={true}
                icon={[Function]}
                tabBarLabel="Login 2"
                tintColor="white"
              />
            </UNDEFINED>,
            <View
              back={false}
              component={undefined}
              hideNavBar={true}
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "tabMain",
            "nodeType": "function",
            "props": Object {
              "activeBackgroundColor": "blue",
              "activeTintColor": "yellow",
              "children": Array [
                <View
                  back={false}
                  component={undefined}
                  hideNavBar={true}
                  icon={[Function]}
                  tabBarLabel="Start"
                  tintColor="white"
                />,
                <View
                  back={false}
                  component={undefined}
                  hideNavBar={true}
                  icon={[Function]}
                  tabBarLabel="Login 2"
                  tintColor="white"
                />,
              ],
              "inactiveBackgroundColor": "black",
              "inactiveTintColor": "grey",
              "lazy": true,
              "tabBarPosition": "bottom",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "main",
                "nodeType": "host",
                "props": Object {
                  "back": false,
                  "component": undefined,
                  "hideNavBar": true,
                  "icon": [Function],
                  "tabBarLabel": "Start",
                  "tintColor": "white",
                },
                "ref": null,
                "rendered": null,
                "type": "View",
              },
              Object {
                "instance": null,
                "key": "main2",
                "nodeType": "host",
                "props": Object {
                  "back": false,
                  "component": undefined,
                  "hideNavBar": true,
                  "icon": [Function],
                  "tabBarLabel": "Login 2",
                  "tintColor": "white",
                },
                "ref": null,
                "rendered": null,
                "type": "View",
              },
            ],
            "type": undefined,
          },
          Object {
            "instance": null,
            "key": "login",
            "nodeType": "host",
            "props": Object {
              "back": false,
              "component": undefined,
              "hideNavBar": true,
            },
            "ref": null,
            "rendered": null,
            "type": "View",
          },
        ],
        "type": "View",
      },
      "type": "View",
    },
    "type": "View",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <View
          hideNavBar={true}
          panHandlers={null}
        >
          <View>
            <UNDEFINED
              activeBackgroundColor="blue"
              activeTintColor="yellow"
              inactiveBackgroundColor="black"
              inactiveTintColor="grey"
              lazy={true}
              tabBarPosition="bottom"
            >
              <View
                back={false}
                component={undefined}
                hideNavBar={true}
                icon={[Function]}
                tabBarLabel="Start"
                tintColor="white"
              />
              <View
                back={false}
                component={undefined}
                hideNavBar={true}
                icon={[Function]}
                tabBarLabel="Login 2"
                tintColor="white"
              />
            </UNDEFINED>
            <View
              back={false}
              component={undefined}
              hideNavBar={true}
            />
          </View>
        </View>,
        "uriPrefix": "myapp://",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": "root",
        "nodeType": "host",
        "props": Object {
          "children": <View>
            <UNDEFINED
              activeBackgroundColor="blue"
              activeTintColor="yellow"
              inactiveBackgroundColor="black"
              inactiveTintColor="grey"
              lazy={true}
              tabBarPosition="bottom"
            >
              <View
                back={false}
                component={undefined}
                hideNavBar={true}
                icon={[Function]}
                tabBarLabel="Start"
                tintColor="white"
              />
              <View
                back={false}
                component={undefined}
                hideNavBar={true}
                icon={[Function]}
                tabBarLabel="Login 2"
                tintColor="white"
              />
            </UNDEFINED>
            <View
              back={false}
              component={undefined}
              hideNavBar={true}
            />
          </View>,
          "hideNavBar": true,
          "panHandlers": null,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": "modal",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <UNDEFINED
                activeBackgroundColor="blue"
                activeTintColor="yellow"
                inactiveBackgroundColor="black"
                inactiveTintColor="grey"
                lazy={true}
                tabBarPosition="bottom"
              >
                <View
                  back={false}
                  component={undefined}
                  hideNavBar={true}
                  icon={[Function]}
                  tabBarLabel="Start"
                  tintColor="white"
                />
                <View
                  back={false}
                  component={undefined}
                  hideNavBar={true}
                  icon={[Function]}
                  tabBarLabel="Login 2"
                  tintColor="white"
                />
              </UNDEFINED>,
              <View
                back={false}
                component={undefined}
                hideNavBar={true}
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "tabMain",
              "nodeType": "function",
              "props": Object {
                "activeBackgroundColor": "blue",
                "activeTintColor": "yellow",
                "children": Array [
                  <View
                    back={false}
                    component={undefined}
                    hideNavBar={true}
                    icon={[Function]}
                    tabBarLabel="Start"
                    tintColor="white"
                  />,
                  <View
                    back={false}
                    component={undefined}
                    hideNavBar={true}
                    icon={[Function]}
                    tabBarLabel="Login 2"
                    tintColor="white"
                  />,
                ],
                "inactiveBackgroundColor": "black",
                "inactiveTintColor": "grey",
                "lazy": true,
                "tabBarPosition": "bottom",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "main",
                  "nodeType": "host",
                  "props": Object {
                    "back": false,
                    "component": undefined,
                    "hideNavBar": true,
                    "icon": [Function],
                    "tabBarLabel": "Start",
                    "tintColor": "white",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "View",
                },
                Object {
                  "instance": null,
                  "key": "main2",
                  "nodeType": "host",
                  "props": Object {
                    "back": false,
                    "component": undefined,
                    "hideNavBar": true,
                    "icon": [Function],
                    "tabBarLabel": "Login 2",
                    "tintColor": "white",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "View",
                },
              ],
              "type": undefined,
            },
            Object {
              "instance": null,
              "key": "login",
              "nodeType": "host",
              "props": Object {
                "back": false,
                "component": undefined,
                "hideNavBar": true,
              },
              "ref": null,
              "rendered": null,
              "type": "View",
            },
          ],
          "type": "View",
        },
        "type": "View",
      },
      "type": "View",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
